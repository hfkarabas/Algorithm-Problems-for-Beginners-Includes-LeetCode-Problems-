#Q1
from idlelib.query import Query

S1 = "sari"
S2 = "mehmet"
S3 = "sarimehmet"

print(S1 + S2)
print(S1[::])
print(S1[:2])
print(S1[2:])
print(S1[:len(S1)//2])
print(S1[len(S1)//2:])

S4 = S1 + S2
S5 = S4[:len(S4)//2] + S2 + S4[len(S4)//2:]
print(S5)

#Q2

a = "Ticaret Üniversitesi"
print(a[:3])
print(a[-3:])

company = input("Enter company: ")
if len(company) >= 3:
    print(company[:3])
    print(company[-3:])
else:
    print("empty string")

#Q3

text = "Mete Cok Sevdin Mete"
a = text.count('Mete')
print(f"Mete {a} kere geçmiştir.")

#Q4

per = input("Enter name, age and job using comma: ")
per = per.split(",")
score = "20,30,40,50"
score_list = score.split(",")
print("name:", per[0].strip())
print("age:", per[1].strip())
print("job:", per[2].strip())

#Q5

workHours = float(input("Enter work hours: "))
hourlyWage = float(input("Enter hourly wage: "))

if workHours > 40:
    weeklyWage = (40 * hourlyWage) + ((workHours - 40) * (hourlyWage * 1.5))
else:
    weeklyWage = workHours * hourlyWage
print(weeklyWage)

#Q6

threeWords = input("Enter the word you want to be printed 3 times: ")
for _ in range(3):
    print(threeWords, end=" ")

#Q7

a = int(input("Enter first number: "))
b = int(input("Enter second number: "))
if a == b or abs(a - b) % 5 == 0:
    print("True")
else:
    print("False")

#Q8

a = input("Enter first integer number: ")
b = input("Enter second integer number: ")

if a.isdigit() and b.isdigit():
    print(int(a) + int(b))
else:
    print("invalid input")

#Q9

country = input("Enter country: ")
area = float(input("Enter the area of the country: "))

if area > 0:
    print(f"{country} is {148940000/area * 100}% of the Earth")
else:
    print("invalid input")

#Q10

weight = float(input("Enter weight in kg: "))
height = float(input("Enter height in m: "))

if weight > 0 and height > 0:
    bmi = weight / (height ** 2)
    print(f"Your BMI is {bmi:.2f}")
    if bmi < 18.5:
        print("Underweight")
    elif 18.5 <= bmi < 25:
        print("Normal weight")
    elif 25 <= bmi < 30:
        print("Overweight")
    else:
        print("Obese")
else:
    print("invalid input")

#Q11

S = input("Enter a phone number but also add symbols and letters in between: ")
output = ""
for i in S:
    if i in "0123456789":
        output += i
print(output)

#Q12

x = "ab123c4"
total = 0
for i in x:
    if i.isnumeric():
        total += i
print(total)

#Q13

x = input('Enter a word: ')
print(list(enumerate(x)))
my_dict = dict(enumerate(x))
print(my_dict)
for i in range(len(x)):
    my_dict[i] = x[i]
print(my_dict)

#Q14

a = int(input("Enter a number: "))
for i in range(1, 11):
    print(f"{a} x {i} = {a * i}")

#Q15

n = int(input("Enter a digit: "))
a = int(n + n)
b = int(n + n + n)
c = int(n)
print (f"{a} + {b} + {c} = {a + b + c}")
if a.isdigit():
    if int(a) in [0,1,2,3,4,5,6,7,8,9]:
        result = int(a) + int(a*2) + int(a*3)
    else:
        print("invalid input")
print(result)

#Q16

#Q16

x = input("Enter a string array: ").split()
new_arr = []
for word in x:
    if len(word) > 1:
        new_arr.append(word[0] + ''.join([i if i != word[0] else '?' for i in word[1:]]))
    else:
        new_arr.append(word)
print(new_arr)

#Q17

odds = []
evens = []
for i in range(1, 51):
    if i % 2 == 0:
        evens.append(i)
    else:
        odds.append(i)
print(odds)
print(evens)

#Q18

a = int(input("Enter first number: "))
b = int(input("Enter second number: "))

if a > b:
    print(list(range(b, a+1)))
elif b > a:
    print(list(range(a, b+1)))
else:
    print(a)

#Q19

wordList = "This is Istanbul, no way out"
print(wordList[::-1])

#Q20
import math

r = int(input("Enter radius: "))
square = 2*(2*r)
circle = math.pi*r*r
dif = abs(square - circle)


 #Q21

word = input("Bir kelime girin Turkce: ")
kalin = ['a','ı','o','u']
ince = ['e','i','ö','ü']
if any(harf in kalin for harf in word) and any(harf in ince for harf in word):
    print('buyuk unlu uyumuna uygun')
else:
    print('buyuk unlu uyumuna uygun degil')

#Q22

n = int(input("Enter an integer: "))
if n > 3:
    if n % 2 == 1:
        print(n-2)
    else:
        print(n+1)
else:
    print("invalid input")

#Q23

#Q23

twoTwenty = [1,2,4,5,10,20,21,22,44,55,110]
twoEighty = [1,2,4,71,142]

amicable = []
for i in twoTwenty:
    for j in twoTwenty:
        if i != j and sum([x for x in range(1,i) if i % x == 0]) == j and sum([x for x in range(1,j) if j % x == 0]) == i:
            amicable.append([i,j])
for i in amicable:
    print(i)

#Q24

def digitValues(num):
    digitValues = []
    while num > 0:
        digitValues.append(num % 10)
        num //= 10
    return digitValues[::-1]

print(digitValues(int(input("Enter an integer: "))))

#Q25

num = int(input("Enter an numer: "))
sum = 0
for i in num:
    sum += int(i)**len(num)
if sum == int(num):
    print(f"{num} is Armstrong number")
else:
    print(f"{num} is not Armstrong number")

#Q26

import random
randomNum = random.randint(1, 100)
guesses = 0
while 1==1:
    guess = int(input("Enter your guess: "))
    guesses += 1
    if guess > randomNum:
        print("Too high")
    elif guess < randomNum:
        print("Too low")
    else:
        print("Correct Guess")
        break


#Q27

num = int(input("Enter an integer: "))
total = 0
for i in range(1, num+1):
    if num % i == 0:
        total += i
if total == num:
    print(f"{num} is a perfect number")
else:
    print(f"{num} is not a perfect number")

#Q28

sentence = input("Enter a sentence: ")
alphaSentence = "".join([i for i in sentence if i.isalpha()])
if alphaSentence == alphaSentence[::-1]:
    print("Palindrome")
else:
    print("Not a palindrome")

#Q29

num = int(input("Enter a number: "))
if num == 1:
    print("not prime")
for i in range(1, num):
    if num %i == 0:
        print("not prime")
        break
    else:
        print("prime")

#Q30

num1 = int(input("Enter first number: "))
num2 = int(input("Enter second number: "))
i = 1
while i <= num1 and i <= num2:
    if num1 % i == 0 and num2 % i == 0:
        gcd = i
    i += 1
print("GCD of", num1, "and", num2, "is", gcd)

#Q31

sentence = input("Enter a sentence: ")
alpha = []
for i in sentence:
    if i.isalpha():
        alpha.append(i)
print(len(alpha))

#Q32

sentence1 = input("Enter first sentence: ").split()
sentence2 = input("Enter second sentence: ").split()
result = []
for word1 in sentence1:
    for word2 in sentence2:
        if word2 in word1:
            result.append(word1)
print(result)

#Q33

nums = [1,4,3,6,7,9,8,2,5]
odd = [i for i in nums if i % 2 != 0]
odd = sorted(odd)
k = 0
for i in nums:
    if i % 2 != 0:
        result.append(odd[k])
        k += 1
    else:
        result.append(i)
print(result)

#Q34

input = [("b",1),("c",2),("x",3),("x",4),("z",5)]

sorted(input, key = lambda x: x[1])

#Q35

list1 = [3, 13, 11, 2, 1, 9, 5]

list2 = []

for i in range(len(list1)):
    if list1[i] < max(list1[i:]):
        list2.append(list1[i])

print("İlk liste:", list1)

other = [i for i in list1 if i not in list2]

print("Sonuç:", sorted(other, reverse=True))

#Q36
import time
num = int(input("Enter an integer: "))
while num != 1:
    if input %2 == 0:
        x = x/2
    else:
        x = 3*x + 1
    time.sleep(1)
print(x)

#Q37

n = int(input("n: "))
locker = [True for i in range(n)]

def locker(x):
    locker = [0 for i in range(x)]
    for i in range(x):
        for j in range(i, x, i + 1):
            if locker[j] == 0:
                locker[j] = 1
            else:
                locker[j] = 0
    return locker

a = locker(7)
print(a, a.count(1))

#Q38

def pairs(list):
    list_new = []

    for i in range(len(list) // 2):
        list_new.append([list[i], list[-i-1]])

    if len(list) % 2 == 1:
        list_new.append([list[len(list) // 2]])

    return list_new

# Example usage
print(pairs([1, 2, 3, 4, 5, 6, 7]))

#Q39

def scramble(str1, str2):
    a = len(str1)
    count = 0
    for i in str2:
        if i in a:
            count += 1
    return count == len(str2)

#Q40

    import random

    choices = ["rock", "paper", "scissors"]
    computer = random.choice(choices)

    user = input("Enter a choice (rock, paper, scissors): ").lower()
    while user not in choices:
        user = input("Invalid input. Enter a choice (rock, paper, scissors): ").lower()

    print(f"Computer chose {computer}")

    if user == computer:
        print("It's a tie!")
    elif user == "rock":
        if computer == "paper":
            print("Computer wins!")
        else:
            print("User wins!")
    elif user == "paper":
        if computer == "scissors":
            print("Computer wins!")
        else:
            print("User wins!")
    elif user == "scissors":
        if computer == "rock":
            print("Computer wins!")
        else:
            print("User wins!")

#Q41

def twoSum(self, nums, target):
     for i in range(len(nums)):
        for j in range(i + 1, len(nums)):
            if nums[i] + nums[j] == target:
                 return [i, j]

#Q42

word = input("Enter a word: ")
def crypto(word):
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    rotate_7 = "ghi"
    new = ""
    for i in word:
        if i in alphabet:
            new += rotate_7[alphabet.index(i.lower)]
        return(new)
print(crypto(word))

#Q43

def nearest_vowel(letter):
    vowels = "aeiou"
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    index = alphabet.index(letter.lower())
    min_diff = float('inf')
    nearest = ""
    for i in vowels:
        diff = abs(alphabet.index(i) - index)
        if diff < min_diff:
            min_diff = diff
            nearest = i
    return nearest

#Q44

    anagrams = {}
    for word in input.split(","):
        sorted_word = "".join(sorted(word))
        if sorted_word in anagrams:
            anagrams[sorted_word].append(word)
        else:
            anagrams[sorted_word] = [word]
    print(list(anagrams.values()))

#Q45

    def isValid(self, s):
        while "{}" in s or "()" in s or "[]" in s:
            s = s.replace("{}", "").replace("()", "").replace("[]", "")

    return len(s) == 0
